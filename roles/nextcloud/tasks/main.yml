---

#
# Supported Vars:
#   - NEXTCLOUD_CONTAINER: Defaults to "nextcloud:latest"
#   - NEXTCLOUD_DB_NAME: Defaults to "nextcloud"
#   - NEXTCLOUD_DB_USER: Defaults to "nextcloud"
#   - NEXTCLOUD_DB_PASSWORD: Required.
#   - NEXTCLOUD_ADMIN_USER: Required.
#   - NEXTCLOUD_ADMIN_PASSWD: Required.
#   - NEXTCLOUD_DOMAIN: Required.
#   - NEXTCLOUD_DATA_DIR: Required. Actual storage location.
#   - NEXTCLOUD_DATA_DIR_GROUP: Required. Group for data dir
#   - NEXTCLOUD_LOCAL_MOUNT_DIR: Optional. Eg: /home/foo/nextcloud.
#
# Env vars:
#   - PI_HOLE_ADMIN_PASSWD: Required. Admin password.
#

- name: Install MySQL
  include_role:
    name: supersaiyanmode.ansible_utils.install_mysql
  vars:
     databases:
       - "{{ NEXTCLOUD_DB_NAME }}"
     users:
       - name: "{{ NEXTCLOUD_DB_USER }}"
         password: "{{ NEXTCLOUD_DB_PASSWORD }}"
         host: '172.17.%'
     permissions:
       - database: "{{ NEXTCLOUD_DB_NAME }}"
         user: "{{ NEXTCLOUD_DB_USER }}"
         host: '172.17.%'

- name: "Get gid of {{ NEXTCLOUD_DATA_DIR_GROUP }}."
  shell:
    cmd: "echo $(id -u {{ NEXTCLOUD_DATA_DIR_GROUP }})"
  register: hdd_gid

- name: Create {{ NEXTCLOUD_DATA_DIR }} directory
  file:
    path: "{{ NEXTCLOUD_DATA_DIR }}"
    state: directory
    owner: "{{ NEXTCLOUD_DATA_DIR_GROUP }}"
    group: "{{ NEXTCLOUD_DATA_DIR_GROUP }}"

- name: "Create .ncdata at {{ NEXTCLOUD_DATA_DIR }}"
  copy:
    dest: "{{ NEXTCLOUD_DATA_DIR }}/.ncdata"
    content: "# Nextcloud data directory\n# Do not change this file"

- name: Install Nextcloud docker container
  include_role:
    name: supersaiyanmode.ansible_utils.install_docker_image
  vars:
    container_name: nextcloud
    container_image: "{{ NEXTCLOUD_CONTAINER }}"
    container_ports: "10090:80"
    network_mode: "bridge"
    image_pull: true
    main_port: 10090
    container_mounts:
      - /var/www/html/config
      - /var/www/html/custom_apps
    custom_mounts:
      - "{{ NEXTCLOUD_DATA_DIR}}:/data"
    setup_commands:
      - cmd: "/bin/bash -c 'getent group hdd || groupadd hdd -g {{ hdd_gid.stdout }}'"
        user: root
      - cmd: "usermod -a -G hdd www-data"
        user: root
      - cmd: "mkdir -p /data"
        user: root
      - user: www-data
        cmd: >
          /bin/bash -c "(php occ status | grep installed | grep true) ||
          php occ maintenance:install
          --database mysql
          --database-host 172.17.0.1
          --database-name {{ NEXTCLOUD_DB_NAME }}
          --database-user {{ NEXTCLOUD_DB_USER }}
          --database-pass {{ NEXTCLOUD_DB_PASSWORD }}
          --admin-user {{ NEXTCLOUD_ADMIN_USER }}
          --admin-pass {{ NEXTCLOUD_ADMIN_PASSWD }}"
      - user: www-data
        cmd: >
          php occ config:system:set trusted_domains 1
          --value "{{ NEXTCLOUD_DOMAIN }}"
      - user: www-data
        cmd: php occ config:system:set trusted_proxies 0 --value "172.17.0.0/24"
      - user: www-data
        cmd: php occ config:system:set datadirectory --value "/data"
      - user: www-data
        cmd: >
          php occ config:system:set overwrite.cli.url
          --value "http://{{ NEXTCLOUD_DOMAIN }}"
      - user: www-data
        cmd: php occ config:system:set filesystem_check_changes --value 1
      - user: www-data
        cmd: php occ upgrade
    env:
      NEXTCLOUD_INIT_HTACCESS: "true"

- name: Setup cron for Nextcloud
  ansible.builtin.cron:
    name: Nextcloud Cron
    minute: "*/5"
    job: docker exec -u www-data nextcloud php cron.php

- name: Install davfs2
  include_role:
    name: supersaiyanmode.ansible_utils.install_packages
  vars:
    packages:
      - davfs2
  when: NEXTCLOUD_LOCAL_MOUNT_DIR is defined

- name: Davfs secrets
  lineinfile:
    path: /etc/davfs2/secrets
    search_string: "{{ NEXTCLOUD_ADMIN_USER }}"
    line: "{{ NEXTCLOUD_DATA_DIR}} \
      {{ NEXTCLOUD_ADMIN_USER }} \
      {{ NEXTCLOUD_ADMIN_PASSWD }}"
    mode: '0600'
  when: NEXTCLOUD_LOCAL_MOUNT_DIR is defined

- name: "Create {{ NEXTCLOUD_LOCAL_MOUNT_DIR | default('') }} directory"
  file:
    path: "{{ NEXTCLOUD_LOCAL_MOUNT_DIR }}"
    state: directory
  when: NEXTCLOUD_LOCAL_MOUNT_DIR is defined

- name: Mount nextcloud
  ansible.posix.mount:
    path: "{{ NEXTCLOUD_LOCAL_MOUNT_DIR }}"
    src: "http://localhost:10090/remote.php/dav/files/{{ NEXTCLOUD_ADMIN_USER }}"
    opts: user,rw,sync,auto
    fstype: davfs
    state: mounted
  when: NEXTCLOUD_LOCAL_MOUNT_DIR is defined
